server:
  port: 80
spring:
  application:
    name: login  #服务名称
  cloud:
    nacos:
      discovery:
        server-addr: 47.94.193.104:8848 #注册中心地址
        #路由匹配转发
    gateway:
      discovery: #实现注册中心新所有服务的直接访问，请求网关后面·追加的服务的名称
        locator:
          enabled: true #允许从注册中心直接访问服务
          lower-case-service-id: true #统一改为小写访问
      routes:
        - id: openapi #随便起名保持唯一
          uri: lb://api #标记匹配的服务，如果来自注册中心，那么需要是使用lb:服务的名称
          predicates:
            - Path=/open/** #请求路径也就是外界需要请求的名称，如果i请求匹配，那么就会转发请求到对应的服务
          filters:
            - StripPrefix=1 #设置路由p匹配的时候，去除路径的层级
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://47.94.193.104:3306/db_carhome?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource

mybatis:
  mapper-locations: classpath*:mapper/*Mapper.xml